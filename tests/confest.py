import sys
import os
import pytest
import asyncio
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from db import Base  # ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Base –∏–∑ db.py
from models import User, Like, ViewedProfile

# ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º SQLite in-memory –¥–ª—è —á–∏—Å—Ç—ã—Ö —Ç–µ—Å—Ç–æ–≤
TEST_DATABASE_URL = "sqlite:///:memory:"
engine = create_engine(TEST_DATABASE_URL, connect_args={"check_same_thread": False})
TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

@pytest.fixture(scope="function")
def db_session():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüìå –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ë–î...")
    Base.metadata.create_all(bind=engine)  # ‚úÖ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
    session = TestingSessionLocal()
    yield session
    print("\nüóë –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ë–î...")
    session.close()
    Base.metadata.drop_all(bind=engine)  # ‚úÖ –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞

@pytest.fixture(scope="session")
def event_loop():
    """–°–æ–∑–¥–∞–Ω–∏–µ event loop –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"""
    loop = asyncio.get_event_loop()
    yield loop
    loop.close()